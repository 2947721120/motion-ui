/// Creates a string for a CSS keyframe, by converting a list of numbers to a comma-separated list of percentage values.
/// @param {List} $input - List of numbers to use.
/// @return {String} A set of comma-separated percentage values.
@function -mui-kf-pct($input) {
  $output: '';
  
  @if type-of($input) == 'number' {
    $output: $input + '%';
  }
  @else if type-of($input) == 'list' {
    @each $i in $input {
      $output: $output + $i + '%, ';
    }
    $output: str-slice($output, 1, -3);
  }
  
  @return $output;
}

/// Generates CSS for a keyframe animation using a Motion UI keyframe object. A keyframe object has this format:
/// ```scss
/// (
///   name: 'keyframe-name',
///   0: (opacity: 0),
///   (25, 75): (opacity: 0.5),
///   100: (opacity: 1),
/// )
/// ```
/// @param {Map} $obj - Keyframe object to convert.
@mixin mui-keyframes($obj) {
  @if type-of($obj) == 'map' {
    // Get the name of the keyframe, and then remove it from the map
    $name: map-get($obj, name);
    $obj: map-remove($obj, name);
  
    @keyframes #{$name} {
      // Now iterate through each keyframe percentage
      @each $pct, $props in $obj {
        #{-mui-kf-pct($pct)} {
          // Lastly, iterate through each CSS property within a percentage and print it out
          @each $prop, $value in $props {
            #{$prop}: #{$value};
          }
        }
      }
    }
  }
}
