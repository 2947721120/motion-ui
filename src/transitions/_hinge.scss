@mixin hinge (
  $dir: in,
  $from: left,
  $axis: edge,
  $perspective: 2000px,
  $turn-origin: from-back,
  $fade: map-get($motion-ui-settings, hingeAndFade),
  $duration: map-get($motion-ui-speeds, default),
  $timing: map-get($motion-ui-easings, default),
  $delay: map-get($motion-ui-delays, default)
) {

  // Rotation directions when hinging from back vs. front
  $rotationAmount: 90deg;
  $rotationsBack: (
    top: rotateX($rotationAmount * -1),
    right: rotateY($rotationAmount * -1),
    bottom: rotateX($rotationAmount),
    left: rotateY($rotationAmount),
  );
  $rotationsFrom: (
    top: rotateX($rotationAmount),
    right: rotateY($rotationAmount),
    bottom: rotateX($rotationAmount * -1),
    left: rotateY($rotationAmount * -1),
  );

  // Rotation origin
  $rotation: '';
  @if $turn-origin == from-front {
    $rotation: map-get($rotationsFrom, $from);
  }
  @else if $turn-origin == from-back {
    $rotation: map-get($rotationsBack, $from);
  }
  @else {
    @warn "`$turn-origin` must be either `from-back` or `from-front`";
  }

  // Start and end state
  $start: '';
  $end: '';
  @if $dir == in {
    $start: perspective($perspective) $rotation;
    $end: rotate(0deg);
  }
  @else {
    $start: rotate(0deg);
    $end: perspective($perspective) $rotation;
  }

  // Turn axis
  $origin: '';
  @if $axis == edge {
    $origin: $from;
  }
  @else {
    $origin: center;
  }

  @include transition-start($dir) {
    @include transition-basics($duration, $timing, $delay);
    transition-property: transform, opacity;
    transform: $start;
    transform-origin: $origin;
    @if $fade { opacity: if($dir == in, 0, 1); }
  }
  @include transition-end($dir) {
    transform: $end;
    @if $fade { opacity: if($dir == in, 1, 0); }
  }
}